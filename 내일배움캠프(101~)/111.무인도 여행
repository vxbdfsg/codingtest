function solution(maps) {
    var answer = [];
    let visit = [];
    for(let i = 0 ; i < maps.length ; i++){
        let temp = [];
        for(let j = 0 ; j < maps[0].length ; j++){
            if(maps[i][j] === 'X') temp.push(1);
            else temp.push(0);
        }
        visit.push(temp);
    }
    
    const dfs = (dx, dy) => {
        if (dx < 0 || dy < 0 || dx >= maps.length || dy >= maps[0].length || visit[dx][dy] === 1) return 0
        const now = parseInt(maps[dx][dy])
        visit[dx][dy] = 1;
        return now + dfs(dx - 1, dy) + dfs(dx + 1, dy) + dfs(dx, dy - 1) + dfs(dx, dy + 1)
    }
    
    for (let x = 0; x < maps.length; x += 1) {
        for (let y = 0; y < maps[x].length; y += 1) {
            if (visit[x][y] === 0) answer.push(dfs(x, y))
        }
    }
    
    answer.sort((a, b) => a - b);
    if(answer.length === 0) answer = [-1];
    return answer;
}
