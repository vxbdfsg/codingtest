function isPrime(num) {
    if (num <= 1) return false;
    if (num === 2) return true;
    for (let i = 2; i <= Math.floor(Math.sqrt(num)); i++) {
        if (num % i === 0) return false;
    }
    return true;
}

function solution(numbers) {
    let arr = numbers.split('');
    let answer = [];
    
    const getPermutations = function (arr, selectNumber) {
        const results = [];
        if (selectNumber === 1) return arr.map((el) => [el]);
        
        arr.forEach((fixed, index, origin) => {
            const rest = [...origin.slice(0, index), ...origin.slice(index + 1)]
            const permutations = getPermutations(rest, selectNumber - 1);
            const attached = permutations.map((el) => [fixed, ...el]);
            results.push(...attached);
        });
        return results; 
    }
    for(let i = 1 ; i <= arr.length ; i++){
        let temp = getPermutations(arr, i);
        for(let j = 0 ; j < temp.length ; j++){
            if(!answer.includes(+temp[j].join('')) && isPrime(Math.floor(+temp[j].join('')))){
                answer.push(+temp[j].join(''));
            }
        }
    }
    return answer.length;
}
